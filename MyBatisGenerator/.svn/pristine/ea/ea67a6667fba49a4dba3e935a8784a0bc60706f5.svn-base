<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!--连接数据库jar 这里选择自己本地位置-->
    <classPathEntry location="D:\MyEclipse\MyEclipse 10\workspace\PG_TEST\MyBatisGenerator\src\main\resources\mssql-jdbc-7.0.0.jre8.jar" />
    <context id="testTables" targetRuntime="MyBatis3">
        <commentGenerator>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true" />
        </commentGenerator>
        <!--数据库连接的信息：驱动类、连接地址、用户名、密码 -->
        <jdbcConnection driverClass="com.microsoft.sqlserver.jdbc.SQLServerDriver"
                        connectionURL="jdbc:sqlserver://120.79.180.3:1433;databaseName=pg_yl_picc"
                        userId="sa"
                        password="pangu@20190420">
        </jdbcConnection>
        <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和
           NUMERIC 类型解析为java.math.BigDecimal -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!-- targetProject:生成PO类的位置 -->
        <javaModelGenerator targetPackage="com.pangu.foying.web.project.back.entity" targetProject="src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false" />
            <!-- 是否对model添加 构造函数 -->
            <property name="constructorBased" value="true"/>
            <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
            <property name="immutable" value="false"/>
            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="true" />
            <!-- 给Model添加一个父类 -->
            <property name="rootClass" value="com.pangu.foying.web.project.back.entity.BaseEntity"/>
        </javaModelGenerator>

        <!-- targetProject:mapper映射文件生成的位置
           如果maven工程只是单独的一个工程，targetProject="src/main/java"
           若果maven工程是分模块的工程，targetProject="所属模块的名称"，例如：
           targetProject="ecps-manager-mapper"，下同-->
        <sqlMapGenerator targetPackage="com.pangu.foying.web.project.back.mapper" targetProject="src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false" />
        </sqlMapGenerator>

        <!-- targetPackage：mapper接口生成的位置
            type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
            type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象
            type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
        -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.pangu.foying.web.project.back.mapper" targetProject="src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false" />
            <!-- 定义Maper.java 源代码中的ByExample() 方法的可视性，可选的值有：
                public; private; protected; default;
            -->
            <!--<property name="exampleMethodVisibility" value=""/>-->
            <!-- 为生成的接口添加父接口 -->
            <!--<property name="rootInterface" value=""/>-->
        </javaClientGenerator>
        <!--<table tableName="Base_Area" domainObjectName="BaseArea">-->
            <!--<columnOverride property="id" column="ID"/>-->
            <!--<columnOverride property="mainId" column="MainID"/>-->
            <!--<columnOverride property="parentId" column="ParentID"/>-->
            <!--<columnOverride property="enCode" column="EnCode"/>-->
            <!--<columnOverride property="areaName" column="AreaName"/>-->
            <!--<columnOverride property="simpleSpelling" column="SimpleSpelling"/>-->
            <!--<columnOverride property="areaLevel" column="AreaLevel"/>-->
            <!--<columnOverride property="deleteMark" column="DeleteMark"/>-->
            <!--<columnOverride property="addTime" column="AddTime" javaType="java.sql.Timestamp"/>-->
            <!--<columnOverride property="addUserId" column="AddUserID"/>-->
            <!--<columnOverride property="addUserName" column="AddUserName"/>-->
            <!--<columnOverride property="modifyTime" column="ModifyTime" javaType="java.sql.Timestamp"/>-->
            <!--<columnOverride property="modifyUserId" column="ModifyUserID"/>-->
            <!--<columnOverride property="modifyName" column="ModifyName"/>-->
            <!--<columnOverride property="deleteName" column="DeleteName"/>-->
            <!--<columnOverride property="deleteTime" column="DeleteTime" javaType="java.sql.Timestamp"/>-->
            <!--<columnOverride property="remark" column="Remark"/>-->
            <!--<columnOverride property="sortCode" column="SortCode"/>-->
            <!--<columnOverride property="isSys" column="IsSYS"/>-->
        <!--</table>-->
    </context>
</generatorConfiguration>